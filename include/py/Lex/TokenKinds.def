//===--- TokenKinds.def - C Family Token Kind Database ----------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file defines the TokenKind database.  This includes normal tokens like
// tok::ampamp (corresponding to the && token) as well as keywords for various
// languages.  Users of this file must optionally #define the TOK, KEYWORD,
// ALIAS, or PPKEYWORD macros to make use of this file.
//
//===----------------------------------------------------------------------===//

#ifndef TOK
#define TOK(X)
#endif
#ifndef PUNCTUATOR
#define PUNCTUATOR(X,Y) TOK(X)
#endif
#ifndef KEYWORD
#define KEYWORD(X,Y) TOK(kw_ ## X)
#endif
#ifndef ALIAS
#define ALIAS(X,Y,Z)
#endif

//===----------------------------------------------------------------------===//
// Language keywords.
//===----------------------------------------------------------------------===//

// These define members of the tok::* namespace.

TOK(unknown)             // Not a token.
TOK(eof)                 // End of file.

TOK(identifier)          // abcde123
TOK(numeric_constant)    // 0x123
TOK(string_constant)      // "foo"
TOK(newline)

TOK(indent)
TOK(dedent)

// C99 6.4.6: Punctuators.
PUNCTUATOR(l_square,            "[")
PUNCTUATOR(r_square,            "]")
PUNCTUATOR(l_paren,             "(")
PUNCTUATOR(r_paren,             ")")
PUNCTUATOR(l_brace,             "{")
PUNCTUATOR(r_brace,             "}")
PUNCTUATOR(period,              ".")
PUNCTUATOR(ellipsis,            "...")
PUNCTUATOR(amp,                 "&")
PUNCTUATOR(ampequal,            "&=")
PUNCTUATOR(star,                "*")
PUNCTUATOR(starstar,            "**")
PUNCTUATOR(starequal,           "*=")
PUNCTUATOR(plus,                "+")
PUNCTUATOR(plusequal,           "+=")
PUNCTUATOR(minus,               "-")
PUNCTUATOR(minusequal,          "-=")
PUNCTUATOR(tilde,               "~")
PUNCTUATOR(slash,               "/")
PUNCTUATOR(slashslash,          "//")
PUNCTUATOR(slashequal,          "/=")
PUNCTUATOR(percent,             "%")
PUNCTUATOR(percentequal,        "%=")
PUNCTUATOR(less,                "<")
PUNCTUATOR(lessless,            "<<")
PUNCTUATOR(lessequal,           "<=")
PUNCTUATOR(lesslessequal,       "<<=")
PUNCTUATOR(greater,             ">")
PUNCTUATOR(greatergreater,      ">>")
PUNCTUATOR(greaterequal,        ">=")
PUNCTUATOR(greatergreaterequal, ">>=")
PUNCTUATOR(caret,               "^")
PUNCTUATOR(caretequal,          "^=")
PUNCTUATOR(pipe,                "|")
PUNCTUATOR(pipeequal,           "|=")
PUNCTUATOR(colon,               ":")
PUNCTUATOR(semi,                ";")
PUNCTUATOR(equal,               "=")
PUNCTUATOR(equalequal,          "==")
PUNCTUATOR(comma,               ",")
PUNCTUATOR(bangequal,           "!=")

PUNCTUATOR(at,                  "@")

KEYWORD(and                         , KEYALL)
KEYWORD(as                          , KEYALL)
KEYWORD(assert                      , KEYALL)
KEYWORD(break                       , KEYALL)
KEYWORD(class                       , KEYALL)
KEYWORD(continue                    , KEYALL)
KEYWORD(def                         , KEYALL)
KEYWORD(del                         , KEYALL)
KEYWORD(elif                        , KEYALL)
KEYWORD(else                        , KEYALL)
KEYWORD(except                      , KEYALL)
KEYWORD(exec                        , KEYALL)
KEYWORD(finally                     , KEYALL)
KEYWORD(for                         , KEYALL)
KEYWORD(from                        , KEYALL)
KEYWORD(global                      , KEYALL)
KEYWORD(if                          , KEYALL)
KEYWORD(import                      , KEYALL)
KEYWORD(in                          , KEYALL)
KEYWORD(is                          , KEYALL)
KEYWORD(lambda                      , KEYALL)
KEYWORD(not                         , KEYALL)
KEYWORD(or                          , KEYALL)
KEYWORD(pass                        , KEYALL)
KEYWORD(print                       , KEYPRINT)
KEYWORD(raise                       , KEYALL)
KEYWORD(return                      , KEYALL)
KEYWORD(try                         , KEYALL)
KEYWORD(while                       , KEYALL)
KEYWORD(with                        , KEYWITH)
KEYWORD(yield                       , KEYALL)

// C++ 2.11p1: Keywords.
KEYWORD(True                        , KEYALL)
KEYWORD(False                       , KEYALL)

#undef ALIAS
#undef KEYWORD
#undef PUNCTUATOR
#undef TOK
